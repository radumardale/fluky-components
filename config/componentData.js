module.exports = /* eslint-disable */ [{"name":"Input","description":"The input component","props":{"value":{"type":{"name":"string"},"required":false,"description":"Input's value"},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text"},"onChange":{"type":{"name":"func"},"required":false,"description":"On change function"},"compact":{"type":{"name":"bool"},"required":false,"description":"Compact size input","defaultValue":{"value":"false","computed":false}}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport wrapInTheme from '../wrapInTheme';\n\nconst InputStyled = styled.input`\n\n  font-size: ${ p => p.compact ? p.theme.typography.size.XS : p.theme.typography.size.normal };\n\n  padding : ${ p => p.compact ? `${p.theme.gap.XS} ${p.theme.gap.XS}` : `${p.theme.gap.M} ${p.theme.gap.S}`};\n`;\n\n/** The input component */\nclass Input extends Component {\n  render() {\n    return (\n      <InputStyled {...this.props}/>\n    );\n  }\n}\n\nInput.propTypes = {\n  /** Input's value */\n  value: PropTypes.string,\n  /** Placeholder text */\n  placeholder: PropTypes.string,\n  /** On change function  */\n  onChange: PropTypes.func,\n  /** Compact size input */\n  compact: PropTypes.bool\n};\n\nInput.defaultProps = {\n  compact: false\n};\n\nexport default wrapInTheme(Input);\n","examples":[{"name":"compactExample","description":"Compact Input with a placeholder example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Compact Input with a placeholder example */\nexport default function ExampleHelloWorld() {\n  return <Input\n    compact={true}\n    placeholder=\"text here...\"\n  />;\n}"},{"name":"defaultExample","description":"Default input example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Default input example */\nexport default function ExampleHelloWorld() {\n  return <Input />;\n}"},{"name":"placeholderExample","description":"Input with a placeholder example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Input with a placeholder example */\nexport default function ExampleHelloWorld() {\n  return <Input placeholder=\"text here...\"/>;\n}"}]},{"name":"Label","description":"A label component","props":{"compact":{"type":{"name":"bool"},"required":false,"description":"Compact label size"}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport wrapInTheme from '../wrapInTheme';\n\nimport styled from 'styled-components';\n\nconst LabelStyled = styled.label`\n  font-size: ${ p => p.compact ? p.theme.typography.size.XS : p.theme.typography.size.normal };\n  color: #546E7A;\n`;\n\n/** A label component */\nclass Label extends Component {\n  render() {\n    return (\n      <LabelStyled {...this.props}>{this.props.children}</LabelStyled>\n    );\n  }\n}\n\nLabel.propTypes = {\n  /** Compact label size */\n  compact : PropTypes.bool\n};\n\nexport default wrapInTheme(Label);\n","examples":[{"name":"compactExample","description":"Compact label example","code":"import React from 'react';\nimport Label from 'fluky-components/Label';\n\n/** Compact label example */\nexport default function CompactLabelExample() {\n  return <Label compact={true}>The label content</Label>;\n}"},{"name":"defaultExample","description":"Default label example","code":"import React from 'react';\nimport Label from 'fluky-components/Label';\n\n/** Default label example */\nexport default function ExampleHelloWorld() {\n  return <Label>The label content</Label>;\n}"}]}]