module.exports = /* eslint-disable */ [{"name":"Checkbox","description":"A Checkbox component","props":{"checked":{"type":{"name":"bool"},"required":false,"description":"Checkbox value"},"onChange":{"type":{"name":"func"},"required":false,"description":"onChange checkbox value"},"labelText":{"type":{"name":"string"},"required":false,"description":"Checkbox label text"},"labelPosition":{"type":{"name":"enum","value":[{"value":"'left'","computed":false},{"value":"'right'","computed":false}]},"required":false,"description":"Label position","defaultValue":{"value":"'right'","computed":false}},"compact":{"type":{"name":"bool"},"required":false,"description":"Compact Checkbox size"}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\nimport wrapInTheme from '../wrapInTheme';\n\nimport styled from 'styled-components';\n\nconst CheckboxStyled = styled.div`\n  display : flex;\n  flex-direction : ${ p => p.labelPosition === 'right' ? 'row' : 'row-reverse' };\n  // font-size: ${ p => p.compact ? p.theme.typography.size.XS : p.theme.typography.size.normal };\n  // color: #546E7A;\n`;\n\nconst CheckboxInput = styled.input`\n\n`;\n\n/** A Checkbox component */\nclass Checkbox extends Component {\n\n  getIcon() {\n    const path = this.props.checked ? \"M19,19H5V5H15V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V11H19M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\" : \"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\";\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-labelledby=\"title\">\n      <path d={path} />\n    </svg>;\n  }\n\n  getLabel() {\n    return <p>Label</p>\n  }\n\n  render() {\n    return (\n      <CheckboxStyled>\n        <CheckboxInput\n          type=\"checkbox\"\n          checked={this.props.checked}\n        />\n        {this.getIcon()}\n        {this.getLabel()}\n      </CheckboxStyled>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  /** Checkbox value */\n  checked: PropTypes.bool,\n  /** onChange checkbox value */\n  onChange: PropTypes.func,\n  /** Checkbox label text */\n  labelText: PropTypes.string,\n  /** Label position */\n  labelPosition : PropTypes.oneOf(['left', 'right']),\n  /** Compact Checkbox size */\n  compact : PropTypes.bool\n};\n\nCheckbox.defaultProps = {\n  labelPosition : 'right'\n};\n\nexport default wrapInTheme(Checkbox);\n","examples":[{"name":"CheckboxExample","description":"Default Checkbox example","code":"import React from 'react';\nimport Checkbox from 'fluky-components/Checkbox';\n\n/** Default Checkbox example */\nexport default function CheckboxExample() {\n  return <Checkbox />;\n}"}]},{"name":"Icon","description":"An Icon component","props":{"type":{"type":{"name":"string"},"required":true,"description":"The Icon name available from a list"}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport wrapInTheme from '../wrapInTheme';\n\n// import styled from 'styled-components';\n\n/** An Icon component */\nclass Icon extends Component {\n  render() {\n\n    const t = require('./paths/alert-outline');\n\n    return (\n      <svg className=\"umbrella\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-labelledby=\"title\">\n\t      <title id=\"title\">Umbrella Icon</title>\n        <path d={t}/>\n      </svg>\n    );\n  }\n}\n\nIcon.propTypes = {\n  /** The Icon name available from a list */\n  type : PropTypes.string.isRequired\n};\n\nexport default wrapInTheme(Icon);\n","examples":[{"name":"defaultIcon","description":"A default test icon","code":"import React from 'react';\nimport Icon from 'fluky-components/Icon';\n\n/** A default test icon */\nexport default function IconExample() {\n  return <Icon\n    type=\"yes\"\n  />;\n}"}]},{"name":"Input","description":"The input component","props":{"value":{"type":{"name":"string"},"required":false,"description":"Input's value"},"placeholder":{"type":{"name":"string"},"required":false,"description":"Placeholder text"},"onChange":{"type":{"name":"func"},"required":false,"description":"On change function"},"compact":{"type":{"name":"bool"},"required":false,"description":"Compact size input","defaultValue":{"value":"false","computed":false}}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport wrapInTheme from '../wrapInTheme';\n\nconst InputStyled = styled.input`\n\n  font-size: ${ p => p.compact ? p.theme.typography.size.XS : p.theme.typography.size.normal };\n\n  padding : ${ p => p.compact ? `${p.theme.gap.XS} ${p.theme.gap.XS}` : `${p.theme.gap.M} ${p.theme.gap.S}`};\n`;\n\n/** The input component */\nclass Input extends Component {\n  render() {\n    return (\n      <InputStyled {...this.props}/>\n    );\n  }\n}\n\nInput.propTypes = {\n  /** Input's value */\n  value: PropTypes.string,\n  /** Placeholder text */\n  placeholder: PropTypes.string,\n  /** On change function  */\n  onChange: PropTypes.func,\n  /** Compact size input */\n  compact: PropTypes.bool\n};\n\nInput.defaultProps = {\n  compact: false\n};\n\nexport default wrapInTheme(Input);\n","examples":[{"name":"compactExample","description":"Compact Input with a placeholder example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Compact Input with a placeholder example */\nexport default function ExampleHelloWorld() {\n  return <Input\n    compact={true}\n    placeholder=\"text here...\"\n  />;\n}"},{"name":"defaultExample","description":"Default input example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Default input example */\nexport default function ExampleHelloWorld() {\n  return <Input />;\n}"},{"name":"placeholderExample","description":"Input with a placeholder example","code":"import React from 'react';\nimport Input from 'fluky-components/Input';\n\n/** Input with a placeholder example */\nexport default function ExampleHelloWorld() {\n  return <Input placeholder=\"text here...\"/>;\n}"}]},{"name":"Label","description":"A label component","props":{"compact":{"type":{"name":"bool"},"required":false,"description":"Compact label size"}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport wrapInTheme from '../wrapInTheme';\n\nimport styled from 'styled-components';\n\nconst LabelStyled = styled.label`\n  font-size: ${ p => p.compact ? p.theme.typography.size.XS : p.theme.typography.size.normal };\n  color: #546E7A;\n`;\n\n/** A label component */\nclass Label extends Component {\n  render() {\n    return (\n      <LabelStyled {...this.props}>{this.props.children}</LabelStyled>\n    );\n  }\n}\n\nLabel.propTypes = {\n  /** Compact label size */\n  compact : PropTypes.bool\n};\n\nexport default wrapInTheme(Label);\n","examples":[{"name":"compactExample","description":"Compact label example","code":"import React from 'react';\nimport Label from 'fluky-components/Label';\n\n/** Compact label example */\nexport default function CompactLabelExample() {\n  return <Label compact={true}>The label content</Label>;\n}"},{"name":"defaultExample","description":"Default label example","code":"import React from 'react';\nimport Label from 'fluky-components/Label';\n\n/** Default label example */\nexport default function ExampleHelloWorld() {\n  return <Label>The label content</Label>;\n}"}]}]